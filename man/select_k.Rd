% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/selected_k.R
\name{select_k}
\alias{select_k}
\title{Compute adaptive cut-off value k}
\usage{
select_k(
  x1,
  x2,
  n1,
  n2,
  alpha0,
  alpha1,
  alpha2,
  i,
  j,
  N2,
  n_bootstrap,
  k = seq(0, 1, length.out = 100),
  seed = NULL
)
}
\arguments{
\item{x1}{Numeric vector. Observations for the first sample.}

\item{x2}{Numeric vector. Observations for the second sample.}

\item{n1}{Integer. Number of trials for the first sample.}

\item{n2}{Integer. Number of trials for the second sample.}

\item{alpha0}{Numeric. First shape parameter.}

\item{alpha1}{Numeric. Second shape parameter.}

\item{alpha2}{Numeric. Third shape parameter.}

\item{j}{Integer. Index for the iteration loop.}

\item{N2}{Integer. Number of iterations for the second loop.}

\item{n_bootstrap}{Integer. Number of bootstrap samples.}

\item{k}{Numeric. The parameter value for which the approximation is computed.}

\item{seed}{Integer. Seed for random number generation. Default is `NULL`, which generates a random seed.}

\item{N1}{Integer. Number of iterations for the first loop.}
}
\value{
Numeric. The Monte Carlo approximation, or stops with an error message if something goes wrong.
}
\description{
This function computes the value k that minimizes the sum of the errors
}
\examples{
alf_integ2(k = 0.5, x1 = c(1, 2), x2 = c(2, 3), n1 = 10, n2 = 12, alpha0 = 1, alpha1 = 2, alpha2 = 3, j = 1, N1 = 100, N2 = 100, n_bootstrap = 1000)

}
